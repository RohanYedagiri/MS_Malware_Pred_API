import ast
import numpy as np


# AVProductStatesIdentifier,
with open('./data/maps/avpstatesid.txt', 'r') as f:
    avpstates = ast.literal_eval(f.read())

avpstates_avg = np.average(list(avpstates.values()))

# CountryIdentifier,
with open('./data/maps/countryid.txt', 'r') as f:
    countryid = ast.literal_eval(f.read())

countryid_avg = np.average(list(countryid.values()))

# CityIdentifier,
with open('./data/maps/cityid.txt', 'r') as f:
    cityid = ast.literal_eval(f.read())

cityid_avg = np.average(list(cityid.values()))

# SmartScreen,
with open('./data/maps/smartscrn.txt', 'r') as f:
    smartscrn = ast.literal_eval(f.read())

smartscrn_avg = np.average(list(smartscrn.values()))

# Census_OEMModelIdentifier,
with open('./data/maps/cen_oem_id.txt', 'r') as f:
    cen_oem_id = ast.literal_eval(f.read())

cen_oem_id_avg = np.average(list(cen_oem_id.values()))

# Census_ProcessorModelIdentifier,
with open('./data/maps/cen_promod_id.txt', 'r') as f:
    cen_promod_id = ast.literal_eval(f.read())

cen_promod_id_avg = np.average(list(cen_promod_id.values()))

# Census_OSInstallTypeName,
with open('./data/maps/cen_osinstall_type.txt', 'r') as f:
    cen_osinstall_type = ast.literal_eval(f.read())

cen_osinstall_type_avg = np.average(list(cen_osinstall_type.values()))

# Census_FirmwareVersionIdentifier,
with open('./data/maps/cen_firmware_id.txt', 'r') as f:
    cen_firmware_id = ast.literal_eval(f.read())

cen_firmware_id_avg = np.average(list(cen_firmware_id.values()))

# avsig_ver_1,
with open('./data/maps/avsig_v1.txt', 'r') as f:
    avsig_v1 = ast.literal_eval(f.read())

avsig_v1_avg = np.average(list(avsig_v1.values()))

# avsig_ver_2,
with open('./data/maps/avsig_v2.txt', 'r') as f:
    avsig_v2 = ast.literal_eval(f.read())

avsig_v2_avg = np.average(list(avsig_v2.values()))

# Census_OS_ver_3
with open('./data/maps/cen_os_v3.txt', 'r') as f:
    cen_os_v3 = ast.literal_eval(f.read())

cen_os_v3_avg = np.average(list(cen_os_v3.values()))
